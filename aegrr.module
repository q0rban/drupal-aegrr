<?php
// $Id$

/**
 * @file
 * 
 */

module_load_include('inc', 'aegrr', 'aegrr.item');

/**
 * Implementation of hook_form_alter().
 */
function aegrr_form_alter(&$form, $form_state, $form_id) {
  if ($form_id == 'site_node_form') {
    $node = $form['#node'];

    $form['#aegrr_items'] = aegrr_items_get();

    $form['aegrr'] = array(
      '#type' => 'fieldset',
      '#title' => t('Performance Settings'),
      '#collapsible' => TRUE,
      '#tree' => TRUE,
    );

    if (isset($node->aegrr->record_id)) {
      $form['aegrr']['record_id'] = array(
        '#type' => 'value',
        '#value' => $node->aegrr->record_id,
      );
    }

    $form['aegrr']['items']['#tree'] = TRUE;

    foreach($form['#aegrr_items'] as $name => $item) {
      $form['aegrr']['items'][$name] = $item->form($form, $node);
    }
  }
}

/**
 * Get all aegrrItem objects.
 *
 * @return
 *   An array of aegrrItem objects.
 */
function aegrr_items_get() {
  static $items = array();

  if (empty($items)) {
    foreach(module_invoke_all('aegrr_items') as $name => $item) {
      if (isset($item['file'])) {
        require_once($item['file']);
      }
      $items[$name] = new $item['class'];
    }
  }

  return $items;
}

/**
 * Implementation of hook_aegrr_items().
 */
function aegrr_aegrr_items() {
  $items = array();

  $items['reverse_proxy'] = array(
    'class' => 'aegrrReverseProxyItem',
  );
  $items['opcode_cache'] = array(
    'class' => 'aegrrOpcodeCache',
  );

  return $items;
}

/**
 * Implementation of hook_nodeapi().
 */
function aegrr_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == 'site') {
    switch ($op) {
      case 'update':
      case 'insert':
        if (isset($node->aegrr)) {
          $record = (object) $node->aegrr;
          $record->nid = $node->nid;
          aegrr_save($record);
        }
        break;
      case 'load':
        return array('aegrr' => aegrr_load($node->nid));
      case 'delete':
        aegrr_delete($node->nid);
    }
  }
}

/**
 * Save a record.
 */
function aegrr_save($record) {
  $aegrr_items = $record->items;

  $record->items = array();

  // Go through each item and ensure that we aren't storing the object.
  foreach($aegrr_items as $name => $item) {
    if (is_object($item) && isset($item->values)) {
      $record->items[$name] = $item->values;
    }
    else {
      $record->items[$name] = $item;
    }
  }

  if (isset($record->record_id)) {
    return drupal_write_record('hosting_site_performance', $record, 'record_id');
  }
  return drupal_write_record('hosting_site_performance', $record);
}

/**
 * Load up a record from the db.
 */
function aegrr_load($nid) {
  $sql = "SELECT * FROM {hosting_site_performance} WHERE nid = %d";
  $record = db_fetch_object(db_query($sql, $nid));

  $aegrr_items = aegrr_items_get();
  $items = unserialize($record->items);

  $record->items = $record->rendered = array();

  foreach($items as $name => $item) {
    if (isset($aegrr_items[$name]) && $item = $aegrr_items[$name]) {
      $item->setValues($item);

      $item->render($record->conf);
      $record->items[$name] = $item;
    }
  }

  return $record;
}

/**
 * Delete a record.
 */
function aegrr_delete($nid) {
  db_query("DELETE FROM {hosting_site_performance} WHERE nid = %d", $nid);
}